/**
 * 
 */
package org.fmaes.simppaal.simulinktotimedautomata.core.loaders;

import java.io.File;

import org.conqat.lib.commons.logging.SimpleLogger;
import org.conqat.lib.simulink.model.SimulinkModel;
import org.fmaes.simppaal.simulinktotimedautomata.core.types.wrappers.*;

/**
 * @author Predrag Filipovikj (predrag.filipovikj@mdh.se) We provide 2 options for loading
 *         SimulinkModels from disk: i) by extracting the relevant information from the SubSystem
 *         block that is reference to a model and ii) by giving the full path to the SimulinkModel
 *         file to the loader.
 */
public class SimulinkModelLoader {
  /**
   * 
   * @param externalModelReferenceBlock
   * @return
   */
  
  private void setParameters(SimulinkModelWrapper simulinkModel){
    
  }
  
  public static SimulinkModelWrapper loadSimulinkModel(
      SimulinkBlockWrapper externalModelReferenceBlock) {
    return null;
  }

  public static SimulinkModelWrapper loadSimulinkModel(String fullPathToSimulinkModel) {
    File modelFile = new File(fullPathToSimulinkModel);
    SimulinkModel simulinkModel = null;
    try (org.conqat.lib.simulink.builder.SimulinkModelBuilder builder =
        new org.conqat.lib.simulink.builder.SimulinkModelBuilder(modelFile, new SimpleLogger())) {
      simulinkModel = builder.buildModel();
    } catch (Exception ex) {
      System.out.println(ex.getMessage());
    }
    return new SimulinkModelWrapper(simulinkModel);
  }

}
