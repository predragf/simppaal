/**
 * 
 */
package org.fmaes.simppaal.simulinktotimedautomata.core.transformers;

import java.util.HashMap;

import org.fmaes.j2uppaal.builders.UppaalDocumentBuilder;
import org.fmaes.j2uppaal.datastructures.uppaalstrcutures.interfaces.UppaalAutomatonInterface;
import org.fmaes.j2uppaal.datastructures.uppaalstructures.UppaalAutomaton;
import org.fmaes.j2uppaal.datastructures.uppaalstructures.UppaalDocument;
import org.fmaes.simppaal.simulinktotimedautomata.core.configuration.ApplicationConfiguration;
import org.fmaes.simppaal.simulinktotimedautomata.platformextender.BlockRoutineGeneratorInterface;
import org.fmaes.simppaal.simulinktotimedautomata.platformextender.BlockRoutineGeneratorPluginManager;

/**
 * @author Predrag Filipovikj (predrag.filipovikj@mdh.se)
 *
 */
public class SimulinkBlockTransformer {

  private ApplicationConfiguration appConfig;

  private HashMap<String, String> templates;

  private HashMap<String, BlockRoutineGeneratorInterface> plugins;

  private final String defaultPluginDirectory = "./plugins/";
  private final String defaultUPPAALTemplateFile = "./templates/uppaal/templates.xml";

  @SuppressWarnings("unused")
  private SimulinkBlockTransformer() {

  }

  public SimulinkBlockTransformer(ApplicationConfiguration _appConfig) {
    appConfig = _appConfig;
    loadTemplates();
    loadPlugins();
  }

  private void loadPlugins() {
    String pluginDirectory = appConfig.getProperty("pluginDirectory", defaultPluginDirectory);
    plugins = BlockRoutineGeneratorPluginManager.loadPluginsFromDirectory(pluginDirectory);
  }

  private void loadTemplates() {
    templates = new HashMap<String, String>();
    String templateDocumentLocation =
        appConfig.getProperty("uppaalTemplatesFile", defaultUPPAALTemplateFile);
    UppaalDocument uppaalTemplateDocument =
        UppaalDocumentBuilder.buildUppaalDocument(templateDocumentLocation);

    for (UppaalAutomatonInterface automaton : uppaalTemplateDocument.getAllAutomata()) {
      if (automaton != null) {
        UppaalAutomaton atm = (UppaalAutomaton) automaton;
        String _name = atm.getName();
        String _toStr = atm.serializeToXML();
        templates.put(automaton.getName(), _toStr);
      }
    }

  }

}
