<nta >
<declaration >// Place global declarations here.
clock gtime;

	double pedal_map_13_signal; 
double to_int_14_signal; 
double _5ms_15_signal; 
double half_16_signal; 
double negative_17_signal; 
double rr_18_signal; 
double add_19_signal; 
double sample_time_over_mass_20_signal; 
double sum_21_signal; 
double unit_delay_22_signal; 
double saturation_23_signal; 
double w_radps_24_signal; 
double saturation_25_signal; 
double whlradius_26_signal; 
double v_wr_27_signal; 
double times100_28_signal; 
double abs_29_signal; 
double max_v_wr_30_signal; 
double _sfunction__32_signal; 
double divide_33_signal; 
double switch_35_signal; 
double switch1_36_signal; 
double friction_force_n_37_signal; 
double sign_38_signal; 
double product_39_signal; 
double radius_40_signal; 
double subtract_41_signal; 
double ts_over_inertia_43_signal; 
double sum_44_signal; 
double w__rpm__45_signal; 
double negative3_46_signal; 
double fl_47_signal; 
double w_radps_48_signal; 
double saturation_49_signal; 
double whlradius_50_signal; 
double v_wr_51_signal; 
double times100_52_signal; 
double abs_53_signal; 
double max_v_wr_54_signal; 
double _sfunction__56_signal; 
double divide_57_signal; 
double switch_59_signal; 
double switch1_60_signal; 
double friction_force_n_61_signal; 
double sign_62_signal; 
double product_63_signal; 
double radius_64_signal; 
double subtract_65_signal; 
double ts_over_inertia_67_signal; 
double sum_68_signal; 
double w__rpm__69_signal; 
double negative2_70_signal; 
double fr_71_signal; 
double w_radps_72_signal; 
double saturation_73_signal; 
double whlradius_74_signal; 
double v_wr_75_signal; 
double times100_76_signal; 
double abs_77_signal; 
double max_v_wr_78_signal; 
double _sfunction__80_signal; 
double divide_81_signal; 
double switch_83_signal; 
double switch1_84_signal; 
double friction_force_n_85_signal; 
double sign_86_signal; 
double product_87_signal; 
double radius_88_signal; 
double subtract_89_signal; 
double ts_over_inertia_91_signal; 
double sum_92_signal; 
double w__rpm__93_signal; 
double negative1_94_signal; 
double rl_95_signal; 
double w_radps_96_signal; 
double saturation_97_signal; 
double whlradius_98_signal; 
double v_wr_99_signal; 
double times100_100_signal; 
double abs_101_signal; 
double max_v_wr_102_signal; 
double _sfunction__104_signal; 
double divide_105_signal; 
double switch_107_signal; 
double switch1_108_signal; 
double friction_force_n_109_signal; 
double sign_110_signal; 
double product_111_signal; 
double radius_112_signal; 
double subtract_113_signal; 
double ts_over_inertia_115_signal; 
double sum_116_signal; 
double w__rpm__117_signal; 
double v__km_h__118_signal; 
double to_int_119_signal; 
double _10ms_3_121_signal; 
double whespd__m_s__122_signal; 
double v__m_s__123_signal; 
double subtract_124_signal; 
double positive_125_signal; 
double times_10_126_signal; 
double slip_abs_on_times_10_127_signal; 
double lockdetect_131_signal; 
double threshold_10km_h_132_signal; 
double to_int_135_signal; 
double _10ms_1_137_signal; 
double whespd__m_s__138_signal; 
double v__m_s__139_signal; 
double subtract_140_signal; 
double positive_141_signal; 
double times_10_142_signal; 
double slip_abs_on_times_10_143_signal; 
double lockdetect_147_signal; 
double threshold_10km_h_148_signal; 
double to_int1_151_signal; 
double pedal_map_161_signal; 
double round_to_int_163_signal; 
double _10ms_164_signal; 
double gain1_165_signal; 
double to_int_167_signal; 
double _10ms_2_169_signal; 
double whespd__m_s__170_signal; 
double v__m_s__171_signal; 
double subtract_172_signal; 
double positive_173_signal; 
double times_10_174_signal; 
double slip_abs_on_times_10_175_signal; 
double lockdetect_179_signal; 
double threshold_10km_h_180_signal; 
double _10ms_4_183_signal; 
double whespd__m_s__184_signal; 
double v__m_s__185_signal; 
double subtract_186_signal; 
double positive_187_signal; 
double times_10_188_signal; 
double slip_abs_on_times_10_189_signal; 
double lockdetect_193_signal; 
double threshold_10km_h_194_signal; 
double _20ms_198_signal; 
double distribution_199_signal; 
double _20ms1_200_signal; 
double add_201_signal; 
double average_rpm_202_signal; 
double w__grad_s__203_signal; 
double v__km_h__204_signal; 
//Constants start (Total constants in the system 12) 
double c_use_div_31_signal = use_division; 
const double c_zero_34_signal = 0.0; 
double c_use_div_55_signal = use_division; 
const double c_zero_58_signal = 0.0; 
double c_use_div_79_signal = use_division; 
const double c_zero_82_signal = 0.0; 
double c_use_div_103_signal = use_division; 
const double c_zero_106_signal = 0.0; 
const double releasebrake_130_signal = 0.0; 
const double releasebrake_146_signal = 0.0; 
const double releasebrake_178_signal = 0.0; 
const double releasebrake_192_signal = 0.0; 
//Constants end</declaration>
<template >
<name x ="5" y ="5">pedal_map_13</name>
<declaration >clock t;
int sn = 13;
double IAT = 0.0001;
double OFFSET = 0;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/HW_Accel_pedal/Pedal_map 
  // Signal name: pedal_map_13_signal; 
 // Predecessors (1): driver_accelerate_12 (brake_acc_nodiv/Driver_Accelerate); successors begin (1): to_int_14 (brake_acc_nodiv/LDM_Accel_peddal/to_int); </declaration>
<location id ="id0" x ="93" y ="-17">
<name x ="110" y ="-25">Operate</name>
<label kind ="exponentialrate" x ="110" y ="0">1000</label>
</location>
<location id ="id1" x ="-144" y ="-17">
<name x ="-169" y ="-51">Start</name>
<label kind ="invariant" x ="-186" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id1" />
<transition >
<source ref ="id1" />
<target ref ="id0" />
<label kind ="guard" x ="-68" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-59" y ="-17">initialize(), blockRoutine()</label>
</transition>
<transition >
<source ref ="id0" />
<target ref ="id0" />
<label kind ="assignment" x ="93" y ="-93">blockRoutine()</label>
<nail x ="93" y ="-76" />
<nail x ="187" y ="-76" />
<nail x ="187" y ="51" />
<nail x ="93" y ="51" />
</transition>
</template>
<template >
<name x ="5" y ="5">to_int_14</name>
<declaration >clock t;
int sn = 14;
double IAT = 0.0001;
double OFFSET = 0;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/LDM_Accel_peddal/to_int 
  // Signal name: to_int_14_signal; 
 // Predecessors (1): pedal_map_13 (brake_acc_nodiv/HW_Accel_pedal/Pedal_map); successors begin (1): half_16 (brake_acc_nodiv/Vehicle_Body_Wheels/half); </declaration>
<location id ="id0" x ="93" y ="-17">
<name x ="110" y ="-25">Operate</name>
<label kind ="exponentialrate" x ="110" y ="0">1000</label>
</location>
<location id ="id1" x ="-144" y ="-17">
<name x ="-169" y ="-51">Start</name>
<label kind ="invariant" x ="-186" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id1" />
<transition >
<source ref ="id1" />
<target ref ="id0" />
<label kind ="guard" x ="-68" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-59" y ="-17">initialize(), blockRoutine()</label>
</transition>
<transition >
<source ref ="id0" />
<target ref ="id0" />
<label kind ="assignment" x ="93" y ="-93">blockRoutine()</label>
<nail x ="93" y ="-76" />
<nail x ="187" y ="-76" />
<nail x ="187" y ="51" />
<nail x ="93" y ="51" />
</transition>
</template>
<template >
<name x ="5" y ="5">_5ms_15</name>
<declaration >clock t;
int sn = 15;
double IAT = 0.0001;
double OFFSET = 0;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/5ms 
  // Signal name: _5ms_15_signal; 
 // Predecessors (0): successors begin (0): </declaration>
<location id ="id0" x ="93" y ="-17">
<name x ="110" y ="-25">Operate</name>
<label kind ="exponentialrate" x ="110" y ="0">1000</label>
</location>
<location id ="id1" x ="-144" y ="-17">
<name x ="-169" y ="-51">Start</name>
<label kind ="invariant" x ="-186" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id1" />
<transition >
<source ref ="id1" />
<target ref ="id0" />
<label kind ="guard" x ="-68" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-59" y ="-17">initialize(), blockRoutine()</label>
</transition>
<transition >
<source ref ="id0" />
<target ref ="id0" />
<label kind ="assignment" x ="93" y ="-93">blockRoutine()</label>
<nail x ="93" y ="-76" />
<nail x ="187" y ="-76" />
<nail x ="187" y ="51" />
<nail x ="93" y ="51" />
</transition>
</template>
<template >
<name >half_16</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 16;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/half 
  // Signal name: half_16_signal; 
 // Predecessors (1): to_int_14 (brake_acc_nodiv/LDM_Accel_peddal/to_int); successors begin (4): rr_18 (brake_acc_nodiv/Vehicle_Body_Wheels/RR); rl_95 (brake_acc_nodiv/Vehicle_Body_Wheels/RL); fr_71 (brake_acc_nodiv/Vehicle_Body_Wheels/FR); fl_47 (brake_acc_nodiv/Vehicle_Body_Wheels/FL); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >negative_17</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 17;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/negative 
  // Signal name: negative_17_signal; 
 // Predecessors (1): threshold_10km_h_148 (brake_acc_nodiv/ABS_RR_Wheel/Threshold_10km//h); successors begin (1): rr_18 (brake_acc_nodiv/Vehicle_Body_Wheels/RR); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >rr_18</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 18;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/RR 
  // Signal name: rr_18_signal; 
 // Predecessors (3): negative_17 (brake_acc_nodiv/Vehicle_Body_Wheels/negative); threshold_10km_h_148 (brake_acc_nodiv/ABS_RR_Wheel/Threshold_10km//h); half_16 (brake_acc_nodiv/Vehicle_Body_Wheels/half); successors begin (1): subtract_41 (brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/Subtract); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >add_19</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 19;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/Vehicle Model/Add 
  // Signal name: add_19_signal; 
 // Predecessors (4): product_39 (brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/Product); product_111 (brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/Product); product_87 (brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/Product); product_63 (brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/Product); successors begin (1): sample_time_over_mass_20 (brake_acc_nodiv/Vehicle_Body_Wheels/Vehicle Model/sample_time_over_mass); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >sample_time_over_mass_20</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 20;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/Vehicle Model/sample_time_over_mass 
  // Signal name: sample_time_over_mass_20_signal; 
 // Predecessors (1): add_19 (brake_acc_nodiv/Vehicle_Body_Wheels/Vehicle Model/Add); successors begin (1): sum_21 (brake_acc_nodiv/Vehicle_Body_Wheels/Vehicle Model/Sum); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >sum_21</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 21;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/Vehicle Model/Sum 
  // Signal name: sum_21_signal; 
 // Predecessors (2): sample_time_over_mass_20 (brake_acc_nodiv/Vehicle_Body_Wheels/Vehicle Model/sample_time_over_mass); saturation_23 (brake_acc_nodiv/Vehicle_Body_Wheels/Vehicle Model/Saturation); successors begin (1): unit_delay_22 (brake_acc_nodiv/Vehicle_Body_Wheels/Vehicle Model/Unit Delay); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >unit_delay_22</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 22;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/Vehicle Model/Unit Delay 
  // Signal name: unit_delay_22_signal; 
 // Predecessors (1): sum_21 (brake_acc_nodiv/Vehicle_Body_Wheels/Vehicle Model/Sum); successors begin (1): saturation_23 (brake_acc_nodiv/Vehicle_Body_Wheels/Vehicle Model/Saturation); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >saturation_23</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 23;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/Vehicle Model/Saturation 
  // Signal name: saturation_23_signal; 
 // Predecessors (1): unit_delay_22 (brake_acc_nodiv/Vehicle_Body_Wheels/Vehicle Model/Unit Delay); successors begin (10): max_v_wr_78 (brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/max_v_wr); v_wr_75 (brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/v_wr); max_v_wr_54 (brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/max_v_wr); v_wr_51 (brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/v_wr); v__km_h__118 (brake_acc_nodiv/Vehicle_Body_Wheels/v (km//h)); max_v_wr_30 (brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/max_v_wr); v_wr_27 (brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/v_wr); v_wr_99 (brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/v_wr); max_v_wr_102 (brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/max_v_wr); sum_21 (brake_acc_nodiv/Vehicle_Body_Wheels/Vehicle Model/Sum); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >w_radps_24</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 24;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/w_radps 
  // Signal name: w_radps_24_signal; 
 // Predecessors (1): sum_44 (brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/Sum); successors begin (1): saturation_25 (brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/Saturation); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >saturation_25</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 25;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/Saturation 
  // Signal name: saturation_25_signal; 
 // Predecessors (1): w_radps_24 (brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/w_radps); successors begin (3): whlradius_26 (brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/whlRadius); sum_44 (brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/Sum); w__rpm__45 (brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/w (rpm)); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >whlradius_26</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 26;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/whlRadius 
  // Signal name: whlradius_26_signal; 
 // Predecessors (1): saturation_25 (brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/Saturation); successors begin (2): max_v_wr_30 (brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/max_v_wr); v_wr_27 (brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/v_wr); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >v_wr_27</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 27;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/v_wr 
  // Signal name: v_wr_27_signal; 
 // Predecessors (2): whlradius_26 (brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/whlRadius); saturation_23 (brake_acc_nodiv/Vehicle_Body_Wheels/Vehicle Model/Saturation); successors begin (1): times100_28 (brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/times100); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >times100_28</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 28;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/times100 
  // Signal name: times100_28_signal; 
 // Predecessors (1): v_wr_27 (brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/v_wr); successors begin (2): sign_38 (brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/Sign); abs_29 (brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/Abs); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >abs_29</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 29;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/Abs 
  // Signal name: abs_29_signal; 
 // Predecessors (1): times100_28 (brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/times100); successors begin (2): _sfunction__0 (brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/slip_ratio_percentage/binary_search_ratio/ SFunction); divide_33 (brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/slip_ratio_percentage/Divide); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >max_v_wr_30</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 30;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/max_v_wr 
  // Signal name: max_v_wr_30_signal; 
 // Predecessors (2): saturation_23 (brake_acc_nodiv/Vehicle_Body_Wheels/Vehicle Model/Saturation); whlradius_26 (brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/whlRadius); successors begin (3): switch_35 (brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/slip_ratio_percentage/Switch); _sfunction__0 (brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/slip_ratio_percentage/binary_search_ratio/ SFunction); divide_33 (brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/slip_ratio_percentage/Divide); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >_sfunction__32</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 32;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/slip_ratio_percentage/binary_search_ratio/ SFunction 
  // Signal name: _sfunction__32_signal; 
 // Predecessors (2): abs_29 (brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/Abs); max_v_wr_30 (brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/max_v_wr); successors begin (2): _terminator__0 (brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/slip_ratio_percentage/binary_search_ratio/ Terminator); switch1_36 (brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/slip_ratio_percentage/Switch1); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >divide_33</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 33;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/slip_ratio_percentage/Divide 
  // Signal name: divide_33_signal; 
 // Predecessors (2): abs_29 (brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/Abs); max_v_wr_30 (brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/max_v_wr); successors begin (1): switch_35 (brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/slip_ratio_percentage/Switch); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >switch_35</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 35;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/slip_ratio_percentage/Switch 
  // Signal name: switch_35_signal; 
 // Predecessors (3): divide_33 (brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/slip_ratio_percentage/Divide); max_v_wr_30 (brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/max_v_wr); c_zero_34 (brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/slip_ratio_percentage/C_zero); successors begin (1): switch1_36 (brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/slip_ratio_percentage/Switch1); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >switch1_36</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 36;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/slip_ratio_percentage/Switch1 
  // Signal name: switch1_36_signal; 
 // Predecessors (3): switch_35 (brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/slip_ratio_percentage/Switch); c_use_div_31 (brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/slip_ratio_percentage/C_use_div); _sfunction__0 (brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/slip_ratio_percentage/binary_search_ratio/ SFunction); successors begin (1): friction_force_n_37 (brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/friction_force_N); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >friction_force_n_37</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 37;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/friction_force_N 
  // Signal name: friction_force_n_37_signal; 
 // Predecessors (1): switch1_36 (brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/slip_ratio_percentage/Switch1); successors begin (1): product_39 (brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/Product); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >sign_38</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 38;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/Sign 
  // Signal name: sign_38_signal; 
 // Predecessors (1): times100_28 (brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/times100); successors begin (1): product_39 (brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/Product); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >product_39</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 39;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/Product 
  // Signal name: product_39_signal; 
 // Predecessors (2): friction_force_n_37 (brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/friction_force_N); sign_38 (brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/Sign); successors begin (2): add_19 (brake_acc_nodiv/Vehicle_Body_Wheels/Vehicle Model/Add); radius_40 (brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/Radius); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >radius_40</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 40;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/Radius 
  // Signal name: radius_40_signal; 
 // Predecessors (1): product_39 (brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/Product); successors begin (1): subtract_41 (brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/Subtract); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >subtract_41</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 41;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/Subtract 
  // Signal name: subtract_41_signal; 
 // Predecessors (2): rr_18 (brake_acc_nodiv/Vehicle_Body_Wheels/RR); radius_40 (brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/Radius); successors begin (1): ts_over_inertia_43 (brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/Ts_over_Inertia); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >ts_over_inertia_43</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 43;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/Ts_over_Inertia 
  // Signal name: ts_over_inertia_43_signal; 
 // Predecessors (1): subtract_41 (brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/Subtract); successors begin (1): sum_44 (brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/Sum); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >sum_44</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 44;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/Sum 
  // Signal name: sum_44_signal; 
 // Predecessors (2): ts_over_inertia_43 (brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/Ts_over_Inertia); saturation_25 (brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/Saturation); successors begin (1): w_radps_24 (brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/w_radps); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >w__rpm__45</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 45;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/w (rpm) 
  // Signal name: w__rpm__45_signal; 
 // Predecessors (1): saturation_25 (brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/Saturation); successors begin (1): to_int_135 (brake_acc_nodiv/HW_RREncoder/to_int); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >negative3_46</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 46;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/negative3 
  // Signal name: negative3_46_signal; 
 // Predecessors (1): threshold_10km_h_194 (brake_acc_nodiv/ABS_FL_Wheel/Threshold_10km//h); successors begin (1): fl_47 (brake_acc_nodiv/Vehicle_Body_Wheels/FL); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >fl_47</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 47;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/FL 
  // Signal name: fl_47_signal; 
 // Predecessors (3): negative3_46 (brake_acc_nodiv/Vehicle_Body_Wheels/negative3); threshold_10km_h_194 (brake_acc_nodiv/ABS_FL_Wheel/Threshold_10km//h); half_16 (brake_acc_nodiv/Vehicle_Body_Wheels/half); successors begin (1): subtract_65 (brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/Subtract); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >w_radps_48</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 48;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/w_radps 
  // Signal name: w_radps_48_signal; 
 // Predecessors (1): sum_68 (brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/Sum); successors begin (1): saturation_49 (brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/Saturation); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >saturation_49</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 49;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/Saturation 
  // Signal name: saturation_49_signal; 
 // Predecessors (1): w_radps_48 (brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/w_radps); successors begin (3): sum_68 (brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/Sum); whlradius_50 (brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/whlRadius); w__rpm__69 (brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/w (rpm)); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >whlradius_50</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 50;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/whlRadius 
  // Signal name: whlradius_50_signal; 
 // Predecessors (1): saturation_49 (brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/Saturation); successors begin (2): v_wr_51 (brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/v_wr); max_v_wr_54 (brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/max_v_wr); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >v_wr_51</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 51;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/v_wr 
  // Signal name: v_wr_51_signal; 
 // Predecessors (2): whlradius_50 (brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/whlRadius); saturation_23 (brake_acc_nodiv/Vehicle_Body_Wheels/Vehicle Model/Saturation); successors begin (1): times100_52 (brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/times100); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >times100_52</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 52;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/times100 
  // Signal name: times100_52_signal; 
 // Predecessors (1): v_wr_51 (brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/v_wr); successors begin (2): sign_62 (brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/Sign); abs_53 (brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/Abs); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >abs_53</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 53;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/Abs 
  // Signal name: abs_53_signal; 
 // Predecessors (1): times100_52 (brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/times100); successors begin (2): _sfunction__0 (brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/slip_ratio_percentage/binary_search_ratio/ SFunction); divide_57 (brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/slip_ratio_percentage/Divide); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >max_v_wr_54</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 54;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/max_v_wr 
  // Signal name: max_v_wr_54_signal; 
 // Predecessors (2): saturation_23 (brake_acc_nodiv/Vehicle_Body_Wheels/Vehicle Model/Saturation); whlradius_50 (brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/whlRadius); successors begin (3): divide_57 (brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/slip_ratio_percentage/Divide); _sfunction__0 (brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/slip_ratio_percentage/binary_search_ratio/ SFunction); switch_59 (brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/slip_ratio_percentage/Switch); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >_sfunction__56</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 56;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/slip_ratio_percentage/binary_search_ratio/ SFunction 
  // Signal name: _sfunction__56_signal; 
 // Predecessors (2): abs_53 (brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/Abs); max_v_wr_54 (brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/max_v_wr); successors begin (2): _terminator__0 (brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/slip_ratio_percentage/binary_search_ratio/ Terminator); switch1_60 (brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/slip_ratio_percentage/Switch1); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >divide_57</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 57;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/slip_ratio_percentage/Divide 
  // Signal name: divide_57_signal; 
 // Predecessors (2): abs_53 (brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/Abs); max_v_wr_54 (brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/max_v_wr); successors begin (1): switch_59 (brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/slip_ratio_percentage/Switch); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >switch_59</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 59;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/slip_ratio_percentage/Switch 
  // Signal name: switch_59_signal; 
 // Predecessors (3): divide_57 (brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/slip_ratio_percentage/Divide); max_v_wr_54 (brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/max_v_wr); c_zero_58 (brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/slip_ratio_percentage/C_zero); successors begin (1): switch1_60 (brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/slip_ratio_percentage/Switch1); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >switch1_60</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 60;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/slip_ratio_percentage/Switch1 
  // Signal name: switch1_60_signal; 
 // Predecessors (3): switch_59 (brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/slip_ratio_percentage/Switch); c_use_div_55 (brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/slip_ratio_percentage/C_use_div); _sfunction__0 (brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/slip_ratio_percentage/binary_search_ratio/ SFunction); successors begin (1): friction_force_n_61 (brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/friction_force_N); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >friction_force_n_61</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 61;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/friction_force_N 
  // Signal name: friction_force_n_61_signal; 
 // Predecessors (1): switch1_60 (brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/slip_ratio_percentage/Switch1); successors begin (1): product_63 (brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/Product); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >sign_62</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 62;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/Sign 
  // Signal name: sign_62_signal; 
 // Predecessors (1): times100_52 (brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/times100); successors begin (1): product_63 (brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/Product); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >product_63</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 63;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/Product 
  // Signal name: product_63_signal; 
 // Predecessors (2): friction_force_n_61 (brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/friction_force_N); sign_62 (brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/Sign); successors begin (2): add_19 (brake_acc_nodiv/Vehicle_Body_Wheels/Vehicle Model/Add); radius_64 (brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/Radius); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >radius_64</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 64;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/Radius 
  // Signal name: radius_64_signal; 
 // Predecessors (1): product_63 (brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/Product); successors begin (1): subtract_65 (brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/Subtract); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >subtract_65</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 65;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/Subtract 
  // Signal name: subtract_65_signal; 
 // Predecessors (2): fl_47 (brake_acc_nodiv/Vehicle_Body_Wheels/FL); radius_64 (brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/Radius); successors begin (1): ts_over_inertia_67 (brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/Ts_over_Inertia); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >ts_over_inertia_67</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 67;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/Ts_over_Inertia 
  // Signal name: ts_over_inertia_67_signal; 
 // Predecessors (1): subtract_65 (brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/Subtract); successors begin (1): sum_68 (brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/Sum); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >sum_68</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 68;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/Sum 
  // Signal name: sum_68_signal; 
 // Predecessors (2): ts_over_inertia_67 (brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/Ts_over_Inertia); saturation_49 (brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/Saturation); successors begin (1): w_radps_48 (brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/w_radps); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >w__rpm__69</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 69;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/w (rpm) 
  // Signal name: w__rpm__69_signal; 
 // Predecessors (1): saturation_49 (brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/Saturation); successors begin (1): to_int1_151 (brake_acc_nodiv/HW_FLEncoder/to_int1); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >negative2_70</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 70;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/negative2 
  // Signal name: negative2_70_signal; 
 // Predecessors (1): threshold_10km_h_132 (brake_acc_nodiv/ABS_FR_Wheel/Threshold_10km//h); successors begin (1): fr_71 (brake_acc_nodiv/Vehicle_Body_Wheels/FR); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >fr_71</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 71;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/FR 
  // Signal name: fr_71_signal; 
 // Predecessors (3): negative2_70 (brake_acc_nodiv/Vehicle_Body_Wheels/negative2); threshold_10km_h_132 (brake_acc_nodiv/ABS_FR_Wheel/Threshold_10km//h); half_16 (brake_acc_nodiv/Vehicle_Body_Wheels/half); successors begin (1): subtract_89 (brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/Subtract); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >w_radps_72</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 72;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/w_radps 
  // Signal name: w_radps_72_signal; 
 // Predecessors (1): sum_92 (brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/Sum); successors begin (1): saturation_73 (brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/Saturation); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >saturation_73</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 73;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/Saturation 
  // Signal name: saturation_73_signal; 
 // Predecessors (1): w_radps_72 (brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/w_radps); successors begin (3): sum_92 (brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/Sum); whlradius_74 (brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/whlRadius); w__rpm__93 (brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/w (rpm)); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >whlradius_74</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 74;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/whlRadius 
  // Signal name: whlradius_74_signal; 
 // Predecessors (1): saturation_73 (brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/Saturation); successors begin (2): max_v_wr_78 (brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/max_v_wr); v_wr_75 (brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/v_wr); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >v_wr_75</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 75;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/v_wr 
  // Signal name: v_wr_75_signal; 
 // Predecessors (2): whlradius_74 (brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/whlRadius); saturation_23 (brake_acc_nodiv/Vehicle_Body_Wheels/Vehicle Model/Saturation); successors begin (1): times100_76 (brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/times100); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >times100_76</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 76;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/times100 
  // Signal name: times100_76_signal; 
 // Predecessors (1): v_wr_75 (brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/v_wr); successors begin (2): abs_77 (brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/Abs); sign_86 (brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/Sign); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >abs_77</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 77;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/Abs 
  // Signal name: abs_77_signal; 
 // Predecessors (1): times100_76 (brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/times100); successors begin (2): _sfunction__0 (brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/slip_ratio_percentage/binary_search_ratio/ SFunction); divide_81 (brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/slip_ratio_percentage/Divide); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >max_v_wr_78</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 78;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/max_v_wr 
  // Signal name: max_v_wr_78_signal; 
 // Predecessors (2): saturation_23 (brake_acc_nodiv/Vehicle_Body_Wheels/Vehicle Model/Saturation); whlradius_74 (brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/whlRadius); successors begin (3): switch_83 (brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/slip_ratio_percentage/Switch); divide_81 (brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/slip_ratio_percentage/Divide); _sfunction__0 (brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/slip_ratio_percentage/binary_search_ratio/ SFunction); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >_sfunction__80</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 80;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/slip_ratio_percentage/binary_search_ratio/ SFunction 
  // Signal name: _sfunction__80_signal; 
 // Predecessors (2): abs_77 (brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/Abs); max_v_wr_78 (brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/max_v_wr); successors begin (2): _terminator__0 (brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/slip_ratio_percentage/binary_search_ratio/ Terminator); switch1_84 (brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/slip_ratio_percentage/Switch1); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >divide_81</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 81;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/slip_ratio_percentage/Divide 
  // Signal name: divide_81_signal; 
 // Predecessors (2): abs_77 (brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/Abs); max_v_wr_78 (brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/max_v_wr); successors begin (1): switch_83 (brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/slip_ratio_percentage/Switch); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >switch_83</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 83;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/slip_ratio_percentage/Switch 
  // Signal name: switch_83_signal; 
 // Predecessors (3): divide_81 (brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/slip_ratio_percentage/Divide); max_v_wr_78 (brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/max_v_wr); c_zero_82 (brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/slip_ratio_percentage/C_zero); successors begin (1): switch1_84 (brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/slip_ratio_percentage/Switch1); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >switch1_84</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 84;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/slip_ratio_percentage/Switch1 
  // Signal name: switch1_84_signal; 
 // Predecessors (3): switch_83 (brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/slip_ratio_percentage/Switch); c_use_div_79 (brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/slip_ratio_percentage/C_use_div); _sfunction__0 (brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/slip_ratio_percentage/binary_search_ratio/ SFunction); successors begin (1): friction_force_n_85 (brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/friction_force_N); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >friction_force_n_85</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 85;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/friction_force_N 
  // Signal name: friction_force_n_85_signal; 
 // Predecessors (1): switch1_84 (brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/slip_ratio_percentage/Switch1); successors begin (1): product_87 (brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/Product); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >sign_86</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 86;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/Sign 
  // Signal name: sign_86_signal; 
 // Predecessors (1): times100_76 (brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/times100); successors begin (1): product_87 (brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/Product); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >product_87</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 87;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/Product 
  // Signal name: product_87_signal; 
 // Predecessors (2): friction_force_n_85 (brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/friction_force_N); sign_86 (brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/Sign); successors begin (2): radius_88 (brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/Radius); add_19 (brake_acc_nodiv/Vehicle_Body_Wheels/Vehicle Model/Add); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >radius_88</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 88;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/Radius 
  // Signal name: radius_88_signal; 
 // Predecessors (1): product_87 (brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/Product); successors begin (1): subtract_89 (brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/Subtract); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >subtract_89</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 89;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/Subtract 
  // Signal name: subtract_89_signal; 
 // Predecessors (2): fr_71 (brake_acc_nodiv/Vehicle_Body_Wheels/FR); radius_88 (brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/Radius); successors begin (1): ts_over_inertia_91 (brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/Ts_over_Inertia); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >ts_over_inertia_91</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 91;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/Ts_over_Inertia 
  // Signal name: ts_over_inertia_91_signal; 
 // Predecessors (1): subtract_89 (brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/Subtract); successors begin (1): sum_92 (brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/Sum); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >sum_92</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 92;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/Sum 
  // Signal name: sum_92_signal; 
 // Predecessors (2): ts_over_inertia_91 (brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/Ts_over_Inertia); saturation_73 (brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/Saturation); successors begin (1): w_radps_72 (brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/w_radps); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >w__rpm__93</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 93;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/w (rpm) 
  // Signal name: w__rpm__93_signal; 
 // Predecessors (1): saturation_73 (brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/Saturation); successors begin (1): to_int_119 (brake_acc_nodiv/HW_FREncoder/to_int); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >negative1_94</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 94;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/negative1 
  // Signal name: negative1_94_signal; 
 // Predecessors (1): threshold_10km_h_180 (brake_acc_nodiv/ABS_RL_Wheel/Threshold_10km//h); successors begin (1): rl_95 (brake_acc_nodiv/Vehicle_Body_Wheels/RL); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >rl_95</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 95;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/RL 
  // Signal name: rl_95_signal; 
 // Predecessors (3): negative1_94 (brake_acc_nodiv/Vehicle_Body_Wheels/negative1); threshold_10km_h_180 (brake_acc_nodiv/ABS_RL_Wheel/Threshold_10km//h); half_16 (brake_acc_nodiv/Vehicle_Body_Wheels/half); successors begin (1): subtract_113 (brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/Subtract); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >w_radps_96</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 96;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/w_radps 
  // Signal name: w_radps_96_signal; 
 // Predecessors (1): sum_116 (brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/Sum); successors begin (1): saturation_97 (brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/Saturation); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >saturation_97</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 97;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/Saturation 
  // Signal name: saturation_97_signal; 
 // Predecessors (1): w_radps_96 (brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/w_radps); successors begin (3): w__rpm__117 (brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/w (rpm)); sum_116 (brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/Sum); whlradius_98 (brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/whlRadius); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >whlradius_98</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 98;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/whlRadius 
  // Signal name: whlradius_98_signal; 
 // Predecessors (1): saturation_97 (brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/Saturation); successors begin (2): max_v_wr_102 (brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/max_v_wr); v_wr_99 (brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/v_wr); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >v_wr_99</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 99;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/v_wr 
  // Signal name: v_wr_99_signal; 
 // Predecessors (2): whlradius_98 (brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/whlRadius); saturation_23 (brake_acc_nodiv/Vehicle_Body_Wheels/Vehicle Model/Saturation); successors begin (1): times100_100 (brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/times100); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >times100_100</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 100;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/times100 
  // Signal name: times100_100_signal; 
 // Predecessors (1): v_wr_99 (brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/v_wr); successors begin (2): abs_101 (brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/Abs); sign_110 (brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/Sign); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >abs_101</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 101;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/Abs 
  // Signal name: abs_101_signal; 
 // Predecessors (1): times100_100 (brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/times100); successors begin (2): divide_105 (brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/slip_ratio_percentage/Divide); _sfunction__0 (brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/slip_ratio_percentage/binary_search_ratio/ SFunction); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >max_v_wr_102</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 102;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/max_v_wr 
  // Signal name: max_v_wr_102_signal; 
 // Predecessors (2): saturation_23 (brake_acc_nodiv/Vehicle_Body_Wheels/Vehicle Model/Saturation); whlradius_98 (brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/whlRadius); successors begin (3): switch_107 (brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/slip_ratio_percentage/Switch); _sfunction__0 (brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/slip_ratio_percentage/binary_search_ratio/ SFunction); divide_105 (brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/slip_ratio_percentage/Divide); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >_sfunction__104</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 104;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/slip_ratio_percentage/binary_search_ratio/ SFunction 
  // Signal name: _sfunction__104_signal; 
 // Predecessors (2): abs_101 (brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/Abs); max_v_wr_102 (brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/max_v_wr); successors begin (2): _terminator__0 (brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/slip_ratio_percentage/binary_search_ratio/ Terminator); switch1_108 (brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/slip_ratio_percentage/Switch1); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >divide_105</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 105;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/slip_ratio_percentage/Divide 
  // Signal name: divide_105_signal; 
 // Predecessors (2): abs_101 (brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/Abs); max_v_wr_102 (brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/max_v_wr); successors begin (1): switch_107 (brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/slip_ratio_percentage/Switch); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >switch_107</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 107;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/slip_ratio_percentage/Switch 
  // Signal name: switch_107_signal; 
 // Predecessors (3): divide_105 (brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/slip_ratio_percentage/Divide); max_v_wr_102 (brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/max_v_wr); c_zero_106 (brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/slip_ratio_percentage/C_zero); successors begin (1): switch1_108 (brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/slip_ratio_percentage/Switch1); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >switch1_108</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 108;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/slip_ratio_percentage/Switch1 
  // Signal name: switch1_108_signal; 
 // Predecessors (3): switch_107 (brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/slip_ratio_percentage/Switch); c_use_div_103 (brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/slip_ratio_percentage/C_use_div); _sfunction__0 (brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/slip_ratio_percentage/binary_search_ratio/ SFunction); successors begin (1): friction_force_n_109 (brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/friction_force_N); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >friction_force_n_109</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 109;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/friction_force_N 
  // Signal name: friction_force_n_109_signal; 
 // Predecessors (1): switch1_108 (brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/slip_ratio_percentage/Switch1); successors begin (1): product_111 (brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/Product); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >sign_110</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 110;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/Sign 
  // Signal name: sign_110_signal; 
 // Predecessors (1): times100_100 (brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/times100); successors begin (1): product_111 (brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/Product); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >product_111</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 111;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/Product 
  // Signal name: product_111_signal; 
 // Predecessors (2): friction_force_n_109 (brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/friction_force_N); sign_110 (brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/Sign); successors begin (2): add_19 (brake_acc_nodiv/Vehicle_Body_Wheels/Vehicle Model/Add); radius_112 (brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/Radius); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >radius_112</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 112;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/Radius 
  // Signal name: radius_112_signal; 
 // Predecessors (1): product_111 (brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/Product); successors begin (1): subtract_113 (brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/Subtract); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >subtract_113</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 113;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/Subtract 
  // Signal name: subtract_113_signal; 
 // Predecessors (2): rl_95 (brake_acc_nodiv/Vehicle_Body_Wheels/RL); radius_112 (brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/Radius); successors begin (1): ts_over_inertia_115 (brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/Ts_over_Inertia); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >ts_over_inertia_115</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 115;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/Ts_over_Inertia 
  // Signal name: ts_over_inertia_115_signal; 
 // Predecessors (1): subtract_113 (brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/Subtract); successors begin (1): sum_116 (brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/Sum); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >sum_116</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 116;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/Sum 
  // Signal name: sum_116_signal; 
 // Predecessors (2): ts_over_inertia_115 (brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/Ts_over_Inertia); saturation_97 (brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/Saturation); successors begin (1): w_radps_96 (brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/w_radps); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >w__rpm__117</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 117;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/w (rpm) 
  // Signal name: w__rpm__117_signal; 
 // Predecessors (1): saturation_97 (brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/Saturation); successors begin (1): to_int_167 (brake_acc_nodiv/HW_RLEncoder/to_int); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >v__km_h__118</name>
<declaration >double ts = T_veh;
double IAT = 0.0001;
int sn = 118;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Vehicle_Body_Wheels/v (km//h) 
  // Signal name: v__km_h__118_signal; 
 // Predecessors (1): saturation_23 (brake_acc_nodiv/Vehicle_Body_Wheels/Vehicle Model/Saturation); successors begin (0): </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name x ="5" y ="5">to_int_119</name>
<declaration >clock t;
int sn = 119;
double IAT = 0.0001;
double OFFSET = 0;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/HW_FREncoder/to_int 
  // Signal name: to_int_119_signal; 
 // Predecessors (1): w__rpm__93 (brake_acc_nodiv/Vehicle_Body_Wheels/FR_Wheel/w (rpm)); successors begin (3): whespd__m_s__122 (brake_acc_nodiv/ABS_FR_Wheel/If v&gt;=10 km//h/wheSpd (m//s)); add_201 (brake_acc_nodiv/Veh_Speed_Estimator/Add); terminator2_0 (brake_acc_nodiv/Global Brake Controller/Terminator2); </declaration>
<location id ="id0" x ="93" y ="-17">
<name x ="110" y ="-25">Operate</name>
<label kind ="exponentialrate" x ="110" y ="0">1000</label>
</location>
<location id ="id1" x ="-144" y ="-17">
<name x ="-169" y ="-51">Start</name>
<label kind ="invariant" x ="-186" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id1" />
<transition >
<source ref ="id1" />
<target ref ="id0" />
<label kind ="guard" x ="-68" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-59" y ="-17">initialize(), blockRoutine()</label>
</transition>
<transition >
<source ref ="id0" />
<target ref ="id0" />
<label kind ="assignment" x ="93" y ="-93">blockRoutine()</label>
<nail x ="93" y ="-76" />
<nail x ="187" y ="-76" />
<nail x ="187" y ="51" />
<nail x ="93" y ="51" />
</transition>
</template>
<template >
<name x ="5" y ="5">_10ms_3_121</name>
<declaration >clock t;
int sn = 121;
double IAT = 0.0001;
double OFFSET = 0;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/10ms_3 
  // Signal name: _10ms_3_121_signal; 
 // Predecessors (0): successors begin (0): </declaration>
<location id ="id0" x ="93" y ="-17">
<name x ="110" y ="-25">Operate</name>
<label kind ="exponentialrate" x ="110" y ="0">1000</label>
</location>
<location id ="id1" x ="-144" y ="-17">
<name x ="-169" y ="-51">Start</name>
<label kind ="invariant" x ="-186" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id1" />
<transition >
<source ref ="id1" />
<target ref ="id0" />
<label kind ="guard" x ="-68" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-59" y ="-17">initialize(), blockRoutine()</label>
</transition>
<transition >
<source ref ="id0" />
<target ref ="id0" />
<label kind ="assignment" x ="93" y ="-93">blockRoutine()</label>
<nail x ="93" y ="-76" />
<nail x ="187" y ="-76" />
<nail x ="187" y ="51" />
<nail x ="93" y ="51" />
</transition>
</template>
<template >
<name >whespd__m_s__122</name>
<declaration >double ts = T_abs;
double IAT = 0.0001;
int sn = 122;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/ABS_FR_Wheel/If v&gt;=10 km//h/wheSpd (m//s) 
  // Signal name: whespd__m_s__122_signal; 
 // Predecessors (1): to_int_119 (brake_acc_nodiv/HW_FREncoder/to_int); successors begin (1): subtract_124 (brake_acc_nodiv/ABS_FR_Wheel/If v&gt;=10 km//h/Subtract); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >v__m_s__123</name>
<declaration >double ts = T_abs;
double IAT = 0.0001;
int sn = 123;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/ABS_FR_Wheel/If v&gt;=10 km//h/v (m//s) 
  // Signal name: v__m_s__123_signal; 
 // Predecessors (1): v__km_h__204 (brake_acc_nodiv/Veh_Speed_Estimator/v (km//h)); successors begin (2): subtract_124 (brake_acc_nodiv/ABS_FR_Wheel/If v&gt;=10 km//h/Subtract); slip_abs_on_times_10_127 (brake_acc_nodiv/ABS_FR_Wheel/If v&gt;=10 km//h/slip_abs_on_times_10); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >subtract_124</name>
<declaration >double ts = T_abs;
double IAT = 0.0001;
int sn = 124;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/ABS_FR_Wheel/If v&gt;=10 km//h/Subtract 
  // Signal name: subtract_124_signal; 
 // Predecessors (2): whespd__m_s__122 (brake_acc_nodiv/ABS_FR_Wheel/If v&gt;=10 km//h/wheSpd (m//s)); v__m_s__123 (brake_acc_nodiv/ABS_FR_Wheel/If v&gt;=10 km//h/v (m//s)); successors begin (1): positive_125 (brake_acc_nodiv/ABS_FR_Wheel/If v&gt;=10 km//h/positive); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >positive_125</name>
<declaration >double ts = T_abs;
double IAT = 0.0001;
int sn = 125;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/ABS_FR_Wheel/If v&gt;=10 km//h/positive 
  // Signal name: positive_125_signal; 
 // Predecessors (1): subtract_124 (brake_acc_nodiv/ABS_FR_Wheel/If v&gt;=10 km//h/Subtract); successors begin (1): times_10_126 (brake_acc_nodiv/ABS_FR_Wheel/If v&gt;=10 km//h/times_10); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >times_10_126</name>
<declaration >double ts = T_abs;
double IAT = 0.0001;
int sn = 126;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/ABS_FR_Wheel/If v&gt;=10 km//h/times_10 
  // Signal name: times_10_126_signal; 
 // Predecessors (1): positive_125 (brake_acc_nodiv/ABS_FR_Wheel/If v&gt;=10 km//h/positive); successors begin (1): relational_noperator_0 (brake_acc_nodiv/ABS_FR_Wheel/If v&gt;=10 km//h/RelationalnOperator); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >slip_abs_on_times_10_127</name>
<declaration >double ts = T_abs;
double IAT = 0.0001;
int sn = 127;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/ABS_FR_Wheel/If v&gt;=10 km//h/slip_abs_on_times_10 
  // Signal name: slip_abs_on_times_10_127_signal; 
 // Predecessors (1): v__m_s__123 (brake_acc_nodiv/ABS_FR_Wheel/If v&gt;=10 km//h/v (m//s)); successors begin (1): relational_noperator_0 (brake_acc_nodiv/ABS_FR_Wheel/If v&gt;=10 km//h/RelationalnOperator); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >lockdetect_131</name>
<declaration >double ts = T_abs;
double IAT = 0.0001;
int sn = 131;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/ABS_FR_Wheel/If v&gt;=10 km//h/LockDetect 
  // Signal name: lockdetect_131_signal; 
 // Predecessors (3): releasebrake_130 (brake_acc_nodiv/ABS_FR_Wheel/If v&gt;=10 km//h/ReleaseBrake); relational_noperator_0 (brake_acc_nodiv/ABS_FR_Wheel/If v&gt;=10 km//h/RelationalnOperator); distribution_199 (brake_acc_nodiv/Global Brake Controller/Distribution); successors begin (1): threshold_10km_h_132 (brake_acc_nodiv/ABS_FR_Wheel/Threshold_10km//h); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >threshold_10km_h_132</name>
<declaration >double ts = T_abs;
double IAT = 0.0001;
int sn = 132;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/ABS_FR_Wheel/Threshold_10km//h 
  // Signal name: threshold_10km_h_132_signal; 
 // Predecessors (3): lockdetect_131 (brake_acc_nodiv/ABS_FR_Wheel/If v&gt;=10 km//h/LockDetect); v__km_h__204 (brake_acc_nodiv/Veh_Speed_Estimator/v (km//h)); distribution_199 (brake_acc_nodiv/Global Brake Controller/Distribution); successors begin (2): negative2_70 (brake_acc_nodiv/Vehicle_Body_Wheels/negative2); fr_71 (brake_acc_nodiv/Vehicle_Body_Wheels/FR); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name x ="5" y ="5">to_int_135</name>
<declaration >clock t;
int sn = 135;
double IAT = 0.0001;
double OFFSET = 0;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/HW_RREncoder/to_int 
  // Signal name: to_int_135_signal; 
 // Predecessors (1): w__rpm__45 (brake_acc_nodiv/Vehicle_Body_Wheels/RR_Wheel/w (rpm)); successors begin (3): whespd__m_s__138 (brake_acc_nodiv/ABS_RR_Wheel/If v&gt;=10 km//h/wheSpd (m//s)); terminator_0 (brake_acc_nodiv/Global Brake Controller/Terminator); add_201 (brake_acc_nodiv/Veh_Speed_Estimator/Add); </declaration>
<location id ="id0" x ="93" y ="-17">
<name x ="110" y ="-25">Operate</name>
<label kind ="exponentialrate" x ="110" y ="0">1000</label>
</location>
<location id ="id1" x ="-144" y ="-17">
<name x ="-169" y ="-51">Start</name>
<label kind ="invariant" x ="-186" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id1" />
<transition >
<source ref ="id1" />
<target ref ="id0" />
<label kind ="guard" x ="-68" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-59" y ="-17">initialize(), blockRoutine()</label>
</transition>
<transition >
<source ref ="id0" />
<target ref ="id0" />
<label kind ="assignment" x ="93" y ="-93">blockRoutine()</label>
<nail x ="93" y ="-76" />
<nail x ="187" y ="-76" />
<nail x ="187" y ="51" />
<nail x ="93" y ="51" />
</transition>
</template>
<template >
<name x ="5" y ="5">_10ms_1_137</name>
<declaration >clock t;
int sn = 137;
double IAT = 0.0001;
double OFFSET = 0;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/10ms_1 
  // Signal name: _10ms_1_137_signal; 
 // Predecessors (0): successors begin (0): </declaration>
<location id ="id0" x ="93" y ="-17">
<name x ="110" y ="-25">Operate</name>
<label kind ="exponentialrate" x ="110" y ="0">1000</label>
</location>
<location id ="id1" x ="-144" y ="-17">
<name x ="-169" y ="-51">Start</name>
<label kind ="invariant" x ="-186" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id1" />
<transition >
<source ref ="id1" />
<target ref ="id0" />
<label kind ="guard" x ="-68" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-59" y ="-17">initialize(), blockRoutine()</label>
</transition>
<transition >
<source ref ="id0" />
<target ref ="id0" />
<label kind ="assignment" x ="93" y ="-93">blockRoutine()</label>
<nail x ="93" y ="-76" />
<nail x ="187" y ="-76" />
<nail x ="187" y ="51" />
<nail x ="93" y ="51" />
</transition>
</template>
<template >
<name >whespd__m_s__138</name>
<declaration >double ts = T_abs;
double IAT = 0.0001;
int sn = 138;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/ABS_RR_Wheel/If v&gt;=10 km//h/wheSpd (m//s) 
  // Signal name: whespd__m_s__138_signal; 
 // Predecessors (1): to_int_135 (brake_acc_nodiv/HW_RREncoder/to_int); successors begin (1): subtract_140 (brake_acc_nodiv/ABS_RR_Wheel/If v&gt;=10 km//h/Subtract); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >v__m_s__139</name>
<declaration >double ts = T_abs;
double IAT = 0.0001;
int sn = 139;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/ABS_RR_Wheel/If v&gt;=10 km//h/v (m//s) 
  // Signal name: v__m_s__139_signal; 
 // Predecessors (1): v__km_h__204 (brake_acc_nodiv/Veh_Speed_Estimator/v (km//h)); successors begin (2): slip_abs_on_times_10_143 (brake_acc_nodiv/ABS_RR_Wheel/If v&gt;=10 km//h/slip_abs_on_times_10); subtract_140 (brake_acc_nodiv/ABS_RR_Wheel/If v&gt;=10 km//h/Subtract); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >subtract_140</name>
<declaration >double ts = T_abs;
double IAT = 0.0001;
int sn = 140;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/ABS_RR_Wheel/If v&gt;=10 km//h/Subtract 
  // Signal name: subtract_140_signal; 
 // Predecessors (2): whespd__m_s__138 (brake_acc_nodiv/ABS_RR_Wheel/If v&gt;=10 km//h/wheSpd (m//s)); v__m_s__139 (brake_acc_nodiv/ABS_RR_Wheel/If v&gt;=10 km//h/v (m//s)); successors begin (1): positive_141 (brake_acc_nodiv/ABS_RR_Wheel/If v&gt;=10 km//h/positive); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >positive_141</name>
<declaration >double ts = T_abs;
double IAT = 0.0001;
int sn = 141;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/ABS_RR_Wheel/If v&gt;=10 km//h/positive 
  // Signal name: positive_141_signal; 
 // Predecessors (1): subtract_140 (brake_acc_nodiv/ABS_RR_Wheel/If v&gt;=10 km//h/Subtract); successors begin (1): times_10_142 (brake_acc_nodiv/ABS_RR_Wheel/If v&gt;=10 km//h/times_10); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >times_10_142</name>
<declaration >double ts = T_abs;
double IAT = 0.0001;
int sn = 142;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/ABS_RR_Wheel/If v&gt;=10 km//h/times_10 
  // Signal name: times_10_142_signal; 
 // Predecessors (1): positive_141 (brake_acc_nodiv/ABS_RR_Wheel/If v&gt;=10 km//h/positive); successors begin (1): relational_noperator_0 (brake_acc_nodiv/ABS_RR_Wheel/If v&gt;=10 km//h/RelationalnOperator); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >slip_abs_on_times_10_143</name>
<declaration >double ts = T_abs;
double IAT = 0.0001;
int sn = 143;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/ABS_RR_Wheel/If v&gt;=10 km//h/slip_abs_on_times_10 
  // Signal name: slip_abs_on_times_10_143_signal; 
 // Predecessors (1): v__m_s__139 (brake_acc_nodiv/ABS_RR_Wheel/If v&gt;=10 km//h/v (m//s)); successors begin (1): relational_noperator_0 (brake_acc_nodiv/ABS_RR_Wheel/If v&gt;=10 km//h/RelationalnOperator); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >lockdetect_147</name>
<declaration >double ts = T_abs;
double IAT = 0.0001;
int sn = 147;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/ABS_RR_Wheel/If v&gt;=10 km//h/LockDetect 
  // Signal name: lockdetect_147_signal; 
 // Predecessors (3): releasebrake_146 (brake_acc_nodiv/ABS_RR_Wheel/If v&gt;=10 km//h/ReleaseBrake); relational_noperator_0 (brake_acc_nodiv/ABS_RR_Wheel/If v&gt;=10 km//h/RelationalnOperator); distribution_199 (brake_acc_nodiv/Global Brake Controller/Distribution); successors begin (1): threshold_10km_h_148 (brake_acc_nodiv/ABS_RR_Wheel/Threshold_10km//h); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >threshold_10km_h_148</name>
<declaration >double ts = T_abs;
double IAT = 0.0001;
int sn = 148;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/ABS_RR_Wheel/Threshold_10km//h 
  // Signal name: threshold_10km_h_148_signal; 
 // Predecessors (3): lockdetect_147 (brake_acc_nodiv/ABS_RR_Wheel/If v&gt;=10 km//h/LockDetect); v__km_h__204 (brake_acc_nodiv/Veh_Speed_Estimator/v (km//h)); distribution_199 (brake_acc_nodiv/Global Brake Controller/Distribution); successors begin (2): negative_17 (brake_acc_nodiv/Vehicle_Body_Wheels/negative); rr_18 (brake_acc_nodiv/Vehicle_Body_Wheels/RR); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name x ="5" y ="5">to_int1_151</name>
<declaration >clock t;
int sn = 151;
double IAT = 0.0001;
double OFFSET = 0;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/HW_FLEncoder/to_int1 
  // Signal name: to_int1_151_signal; 
 // Predecessors (1): w__rpm__69 (brake_acc_nodiv/Vehicle_Body_Wheels/FL_Wheel/w (rpm)); successors begin (3): whespd__m_s__184 (brake_acc_nodiv/ABS_FL_Wheel/If v&gt;=10 km//h/wheSpd (m//s)); terminator3_0 (brake_acc_nodiv/Global Brake Controller/Terminator3); add_201 (brake_acc_nodiv/Veh_Speed_Estimator/Add); </declaration>
<location id ="id0" x ="93" y ="-17">
<name x ="110" y ="-25">Operate</name>
<label kind ="exponentialrate" x ="110" y ="0">1000</label>
</location>
<location id ="id1" x ="-144" y ="-17">
<name x ="-169" y ="-51">Start</name>
<label kind ="invariant" x ="-186" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id1" />
<transition >
<source ref ="id1" />
<target ref ="id0" />
<label kind ="guard" x ="-68" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-59" y ="-17">initialize(), blockRoutine()</label>
</transition>
<transition >
<source ref ="id0" />
<target ref ="id0" />
<label kind ="assignment" x ="93" y ="-93">blockRoutine()</label>
<nail x ="93" y ="-76" />
<nail x ="187" y ="-76" />
<nail x ="187" y ="51" />
<nail x ="93" y ="51" />
</transition>
</template>
<template >
<name x ="5" y ="5">pedal_map_161</name>
<declaration >clock t;
int sn = 161;
double IAT = 0.0001;
double OFFSET = 0;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/HW_BrakePedal/Pedal_map 
  // Signal name: pedal_map_161_signal; 
 // Predecessors (1): driver_brake_160 (brake_acc_nodiv/Driver_Brake); successors begin (1): round_to_int_163 (brake_acc_nodiv/LDM_BrakePedal/round_to_int); </declaration>
<location id ="id0" x ="93" y ="-17">
<name x ="110" y ="-25">Operate</name>
<label kind ="exponentialrate" x ="110" y ="0">1000</label>
</location>
<location id ="id1" x ="-144" y ="-17">
<name x ="-169" y ="-51">Start</name>
<label kind ="invariant" x ="-186" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id1" />
<transition >
<source ref ="id1" />
<target ref ="id0" />
<label kind ="guard" x ="-68" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-59" y ="-17">initialize(), blockRoutine()</label>
</transition>
<transition >
<source ref ="id0" />
<target ref ="id0" />
<label kind ="assignment" x ="93" y ="-93">blockRoutine()</label>
<nail x ="93" y ="-76" />
<nail x ="187" y ="-76" />
<nail x ="187" y ="51" />
<nail x ="93" y ="51" />
</transition>
</template>
<template >
<name x ="5" y ="5">round_to_int_163</name>
<declaration >clock t;
int sn = 163;
double IAT = 0.0001;
double OFFSET = 0;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/LDM_BrakePedal/round_to_int 
  // Signal name: round_to_int_163_signal; 
 // Predecessors (1): pedal_map_161 (brake_acc_nodiv/HW_BrakePedal/Pedal_map); successors begin (1): gain1_165 (brake_acc_nodiv/Brake_Torq_Calculation/Gain1); </declaration>
<location id ="id0" x ="93" y ="-17">
<name x ="110" y ="-25">Operate</name>
<label kind ="exponentialrate" x ="110" y ="0">1000</label>
</location>
<location id ="id1" x ="-144" y ="-17">
<name x ="-169" y ="-51">Start</name>
<label kind ="invariant" x ="-186" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id1" />
<transition >
<source ref ="id1" />
<target ref ="id0" />
<label kind ="guard" x ="-68" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-59" y ="-17">initialize(), blockRoutine()</label>
</transition>
<transition >
<source ref ="id0" />
<target ref ="id0" />
<label kind ="assignment" x ="93" y ="-93">blockRoutine()</label>
<nail x ="93" y ="-76" />
<nail x ="187" y ="-76" />
<nail x ="187" y ="51" />
<nail x ="93" y ="51" />
</transition>
</template>
<template >
<name x ="5" y ="5">_10ms_164</name>
<declaration >clock t;
int sn = 164;
double IAT = 0.0001;
double OFFSET = 0;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/10ms 
  // Signal name: _10ms_164_signal; 
 // Predecessors (0): successors begin (0): </declaration>
<location id ="id0" x ="93" y ="-17">
<name x ="110" y ="-25">Operate</name>
<label kind ="exponentialrate" x ="110" y ="0">1000</label>
</location>
<location id ="id1" x ="-144" y ="-17">
<name x ="-169" y ="-51">Start</name>
<label kind ="invariant" x ="-186" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id1" />
<transition >
<source ref ="id1" />
<target ref ="id0" />
<label kind ="guard" x ="-68" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-59" y ="-17">initialize(), blockRoutine()</label>
</transition>
<transition >
<source ref ="id0" />
<target ref ="id0" />
<label kind ="assignment" x ="93" y ="-93">blockRoutine()</label>
<nail x ="93" y ="-76" />
<nail x ="187" y ="-76" />
<nail x ="187" y ="51" />
<nail x ="93" y ="51" />
</transition>
</template>
<template >
<name >gain1_165</name>
<declaration >double ts = T_brake_pedal;
double IAT = 0.0001;
int sn = 165;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Brake_Torq_Calculation/Gain1 
  // Signal name: gain1_165_signal; 
 // Predecessors (1): round_to_int_163 (brake_acc_nodiv/LDM_BrakePedal/round_to_int); successors begin (1): distribution_199 (brake_acc_nodiv/Global Brake Controller/Distribution); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name x ="5" y ="5">to_int_167</name>
<declaration >clock t;
int sn = 167;
double IAT = 0.0001;
double OFFSET = 0;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/HW_RLEncoder/to_int 
  // Signal name: to_int_167_signal; 
 // Predecessors (1): w__rpm__117 (brake_acc_nodiv/Vehicle_Body_Wheels/RL_Wheel/w (rpm)); successors begin (3): add_201 (brake_acc_nodiv/Veh_Speed_Estimator/Add); terminator1_0 (brake_acc_nodiv/Global Brake Controller/Terminator1); whespd__m_s__170 (brake_acc_nodiv/ABS_RL_Wheel/If v&gt;=10 km//h/wheSpd (m//s)); </declaration>
<location id ="id0" x ="93" y ="-17">
<name x ="110" y ="-25">Operate</name>
<label kind ="exponentialrate" x ="110" y ="0">1000</label>
</location>
<location id ="id1" x ="-144" y ="-17">
<name x ="-169" y ="-51">Start</name>
<label kind ="invariant" x ="-186" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id1" />
<transition >
<source ref ="id1" />
<target ref ="id0" />
<label kind ="guard" x ="-68" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-59" y ="-17">initialize(), blockRoutine()</label>
</transition>
<transition >
<source ref ="id0" />
<target ref ="id0" />
<label kind ="assignment" x ="93" y ="-93">blockRoutine()</label>
<nail x ="93" y ="-76" />
<nail x ="187" y ="-76" />
<nail x ="187" y ="51" />
<nail x ="93" y ="51" />
</transition>
</template>
<template >
<name x ="5" y ="5">_10ms_2_169</name>
<declaration >clock t;
int sn = 169;
double IAT = 0.0001;
double OFFSET = 0;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/10ms_2 
  // Signal name: _10ms_2_169_signal; 
 // Predecessors (0): successors begin (0): </declaration>
<location id ="id0" x ="93" y ="-17">
<name x ="110" y ="-25">Operate</name>
<label kind ="exponentialrate" x ="110" y ="0">1000</label>
</location>
<location id ="id1" x ="-144" y ="-17">
<name x ="-169" y ="-51">Start</name>
<label kind ="invariant" x ="-186" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id1" />
<transition >
<source ref ="id1" />
<target ref ="id0" />
<label kind ="guard" x ="-68" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-59" y ="-17">initialize(), blockRoutine()</label>
</transition>
<transition >
<source ref ="id0" />
<target ref ="id0" />
<label kind ="assignment" x ="93" y ="-93">blockRoutine()</label>
<nail x ="93" y ="-76" />
<nail x ="187" y ="-76" />
<nail x ="187" y ="51" />
<nail x ="93" y ="51" />
</transition>
</template>
<template >
<name >whespd__m_s__170</name>
<declaration >double ts = T_abs;
double IAT = 0.0001;
int sn = 170;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/ABS_RL_Wheel/If v&gt;=10 km//h/wheSpd (m//s) 
  // Signal name: whespd__m_s__170_signal; 
 // Predecessors (1): to_int_167 (brake_acc_nodiv/HW_RLEncoder/to_int); successors begin (1): subtract_172 (brake_acc_nodiv/ABS_RL_Wheel/If v&gt;=10 km//h/Subtract); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >v__m_s__171</name>
<declaration >double ts = T_abs;
double IAT = 0.0001;
int sn = 171;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/ABS_RL_Wheel/If v&gt;=10 km//h/v (m//s) 
  // Signal name: v__m_s__171_signal; 
 // Predecessors (1): v__km_h__204 (brake_acc_nodiv/Veh_Speed_Estimator/v (km//h)); successors begin (2): slip_abs_on_times_10_175 (brake_acc_nodiv/ABS_RL_Wheel/If v&gt;=10 km//h/slip_abs_on_times_10); subtract_172 (brake_acc_nodiv/ABS_RL_Wheel/If v&gt;=10 km//h/Subtract); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >subtract_172</name>
<declaration >double ts = T_abs;
double IAT = 0.0001;
int sn = 172;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/ABS_RL_Wheel/If v&gt;=10 km//h/Subtract 
  // Signal name: subtract_172_signal; 
 // Predecessors (2): whespd__m_s__170 (brake_acc_nodiv/ABS_RL_Wheel/If v&gt;=10 km//h/wheSpd (m//s)); v__m_s__171 (brake_acc_nodiv/ABS_RL_Wheel/If v&gt;=10 km//h/v (m//s)); successors begin (1): positive_173 (brake_acc_nodiv/ABS_RL_Wheel/If v&gt;=10 km//h/positive); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >positive_173</name>
<declaration >double ts = T_abs;
double IAT = 0.0001;
int sn = 173;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/ABS_RL_Wheel/If v&gt;=10 km//h/positive 
  // Signal name: positive_173_signal; 
 // Predecessors (1): subtract_172 (brake_acc_nodiv/ABS_RL_Wheel/If v&gt;=10 km//h/Subtract); successors begin (1): times_10_174 (brake_acc_nodiv/ABS_RL_Wheel/If v&gt;=10 km//h/times_10); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >times_10_174</name>
<declaration >double ts = T_abs;
double IAT = 0.0001;
int sn = 174;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/ABS_RL_Wheel/If v&gt;=10 km//h/times_10 
  // Signal name: times_10_174_signal; 
 // Predecessors (1): positive_173 (brake_acc_nodiv/ABS_RL_Wheel/If v&gt;=10 km//h/positive); successors begin (1): relational_noperator_0 (brake_acc_nodiv/ABS_RL_Wheel/If v&gt;=10 km//h/RelationalnOperator); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >slip_abs_on_times_10_175</name>
<declaration >double ts = T_abs;
double IAT = 0.0001;
int sn = 175;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/ABS_RL_Wheel/If v&gt;=10 km//h/slip_abs_on_times_10 
  // Signal name: slip_abs_on_times_10_175_signal; 
 // Predecessors (1): v__m_s__171 (brake_acc_nodiv/ABS_RL_Wheel/If v&gt;=10 km//h/v (m//s)); successors begin (1): relational_noperator_0 (brake_acc_nodiv/ABS_RL_Wheel/If v&gt;=10 km//h/RelationalnOperator); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >lockdetect_179</name>
<declaration >double ts = T_abs;
double IAT = 0.0001;
int sn = 179;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/ABS_RL_Wheel/If v&gt;=10 km//h/LockDetect 
  // Signal name: lockdetect_179_signal; 
 // Predecessors (3): releasebrake_178 (brake_acc_nodiv/ABS_RL_Wheel/If v&gt;=10 km//h/ReleaseBrake); relational_noperator_0 (brake_acc_nodiv/ABS_RL_Wheel/If v&gt;=10 km//h/RelationalnOperator); distribution_199 (brake_acc_nodiv/Global Brake Controller/Distribution); successors begin (1): threshold_10km_h_180 (brake_acc_nodiv/ABS_RL_Wheel/Threshold_10km//h); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >threshold_10km_h_180</name>
<declaration >double ts = T_abs;
double IAT = 0.0001;
int sn = 180;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/ABS_RL_Wheel/Threshold_10km//h 
  // Signal name: threshold_10km_h_180_signal; 
 // Predecessors (3): lockdetect_179 (brake_acc_nodiv/ABS_RL_Wheel/If v&gt;=10 km//h/LockDetect); v__km_h__204 (brake_acc_nodiv/Veh_Speed_Estimator/v (km//h)); distribution_199 (brake_acc_nodiv/Global Brake Controller/Distribution); successors begin (2): rl_95 (brake_acc_nodiv/Vehicle_Body_Wheels/RL); negative1_94 (brake_acc_nodiv/Vehicle_Body_Wheels/negative1); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name x ="5" y ="5">_10ms_4_183</name>
<declaration >clock t;
int sn = 183;
double IAT = 0.0001;
double OFFSET = 0;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/10ms_4 
  // Signal name: _10ms_4_183_signal; 
 // Predecessors (0): successors begin (0): </declaration>
<location id ="id0" x ="93" y ="-17">
<name x ="110" y ="-25">Operate</name>
<label kind ="exponentialrate" x ="110" y ="0">1000</label>
</location>
<location id ="id1" x ="-144" y ="-17">
<name x ="-169" y ="-51">Start</name>
<label kind ="invariant" x ="-186" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id1" />
<transition >
<source ref ="id1" />
<target ref ="id0" />
<label kind ="guard" x ="-68" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-59" y ="-17">initialize(), blockRoutine()</label>
</transition>
<transition >
<source ref ="id0" />
<target ref ="id0" />
<label kind ="assignment" x ="93" y ="-93">blockRoutine()</label>
<nail x ="93" y ="-76" />
<nail x ="187" y ="-76" />
<nail x ="187" y ="51" />
<nail x ="93" y ="51" />
</transition>
</template>
<template >
<name >whespd__m_s__184</name>
<declaration >double ts = T_abs;
double IAT = 0.0001;
int sn = 184;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/ABS_FL_Wheel/If v&gt;=10 km//h/wheSpd (m//s) 
  // Signal name: whespd__m_s__184_signal; 
 // Predecessors (1): to_int1_151 (brake_acc_nodiv/HW_FLEncoder/to_int1); successors begin (1): subtract_186 (brake_acc_nodiv/ABS_FL_Wheel/If v&gt;=10 km//h/Subtract); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >v__m_s__185</name>
<declaration >double ts = T_abs;
double IAT = 0.0001;
int sn = 185;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/ABS_FL_Wheel/If v&gt;=10 km//h/v (m//s) 
  // Signal name: v__m_s__185_signal; 
 // Predecessors (1): v__km_h__204 (brake_acc_nodiv/Veh_Speed_Estimator/v (km//h)); successors begin (2): slip_abs_on_times_10_189 (brake_acc_nodiv/ABS_FL_Wheel/If v&gt;=10 km//h/slip_abs_on_times_10); subtract_186 (brake_acc_nodiv/ABS_FL_Wheel/If v&gt;=10 km//h/Subtract); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >subtract_186</name>
<declaration >double ts = T_abs;
double IAT = 0.0001;
int sn = 186;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/ABS_FL_Wheel/If v&gt;=10 km//h/Subtract 
  // Signal name: subtract_186_signal; 
 // Predecessors (2): whespd__m_s__184 (brake_acc_nodiv/ABS_FL_Wheel/If v&gt;=10 km//h/wheSpd (m//s)); v__m_s__185 (brake_acc_nodiv/ABS_FL_Wheel/If v&gt;=10 km//h/v (m//s)); successors begin (1): positive_187 (brake_acc_nodiv/ABS_FL_Wheel/If v&gt;=10 km//h/positive); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >positive_187</name>
<declaration >double ts = T_abs;
double IAT = 0.0001;
int sn = 187;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/ABS_FL_Wheel/If v&gt;=10 km//h/positive 
  // Signal name: positive_187_signal; 
 // Predecessors (1): subtract_186 (brake_acc_nodiv/ABS_FL_Wheel/If v&gt;=10 km//h/Subtract); successors begin (1): times_10_188 (brake_acc_nodiv/ABS_FL_Wheel/If v&gt;=10 km//h/times_10); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >times_10_188</name>
<declaration >double ts = T_abs;
double IAT = 0.0001;
int sn = 188;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/ABS_FL_Wheel/If v&gt;=10 km//h/times_10 
  // Signal name: times_10_188_signal; 
 // Predecessors (1): positive_187 (brake_acc_nodiv/ABS_FL_Wheel/If v&gt;=10 km//h/positive); successors begin (1): relational_noperator_0 (brake_acc_nodiv/ABS_FL_Wheel/If v&gt;=10 km//h/RelationalnOperator); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >slip_abs_on_times_10_189</name>
<declaration >double ts = T_abs;
double IAT = 0.0001;
int sn = 189;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/ABS_FL_Wheel/If v&gt;=10 km//h/slip_abs_on_times_10 
  // Signal name: slip_abs_on_times_10_189_signal; 
 // Predecessors (1): v__m_s__185 (brake_acc_nodiv/ABS_FL_Wheel/If v&gt;=10 km//h/v (m//s)); successors begin (1): relational_noperator_0 (brake_acc_nodiv/ABS_FL_Wheel/If v&gt;=10 km//h/RelationalnOperator); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >lockdetect_193</name>
<declaration >double ts = T_abs;
double IAT = 0.0001;
int sn = 193;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/ABS_FL_Wheel/If v&gt;=10 km//h/LockDetect 
  // Signal name: lockdetect_193_signal; 
 // Predecessors (3): releasebrake_192 (brake_acc_nodiv/ABS_FL_Wheel/If v&gt;=10 km//h/ReleaseBrake); relational_noperator_0 (brake_acc_nodiv/ABS_FL_Wheel/If v&gt;=10 km//h/RelationalnOperator); distribution_199 (brake_acc_nodiv/Global Brake Controller/Distribution); successors begin (1): threshold_10km_h_194 (brake_acc_nodiv/ABS_FL_Wheel/Threshold_10km//h); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >threshold_10km_h_194</name>
<declaration >double ts = T_abs;
double IAT = 0.0001;
int sn = 194;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/ABS_FL_Wheel/Threshold_10km//h 
  // Signal name: threshold_10km_h_194_signal; 
 // Predecessors (3): lockdetect_193 (brake_acc_nodiv/ABS_FL_Wheel/If v&gt;=10 km//h/LockDetect); v__km_h__204 (brake_acc_nodiv/Veh_Speed_Estimator/v (km//h)); distribution_199 (brake_acc_nodiv/Global Brake Controller/Distribution); successors begin (2): negative3_46 (brake_acc_nodiv/Vehicle_Body_Wheels/negative3); fl_47 (brake_acc_nodiv/Vehicle_Body_Wheels/FL); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name x ="5" y ="5">_20ms_198</name>
<declaration >clock t;
int sn = 198;
double IAT = 0.0001;
double OFFSET = 0;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/20ms 
  // Signal name: _20ms_198_signal; 
 // Predecessors (0): successors begin (0): </declaration>
<location id ="id0" x ="93" y ="-17">
<name x ="110" y ="-25">Operate</name>
<label kind ="exponentialrate" x ="110" y ="0">1000</label>
</location>
<location id ="id1" x ="-144" y ="-17">
<name x ="-169" y ="-51">Start</name>
<label kind ="invariant" x ="-186" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id1" />
<transition >
<source ref ="id1" />
<target ref ="id0" />
<label kind ="guard" x ="-68" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-59" y ="-17">initialize(), blockRoutine()</label>
</transition>
<transition >
<source ref ="id0" />
<target ref ="id0" />
<label kind ="assignment" x ="93" y ="-93">blockRoutine()</label>
<nail x ="93" y ="-76" />
<nail x ="187" y ="-76" />
<nail x ="187" y ="51" />
<nail x ="93" y ="51" />
</transition>
</template>
<template >
<name >distribution_199</name>
<declaration >double ts = T_brake_ctrl;
double IAT = 0.0001;
int sn = 199;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Global Brake Controller/Distribution 
  // Signal name: distribution_199_signal; 
 // Predecessors (1): gain1_165 (brake_acc_nodiv/Brake_Torq_Calculation/Gain1); successors begin (8): threshold_10km_h_148 (brake_acc_nodiv/ABS_RR_Wheel/Threshold_10km//h); lockdetect_147 (brake_acc_nodiv/ABS_RR_Wheel/If v&gt;=10 km//h/LockDetect); lockdetect_179 (brake_acc_nodiv/ABS_RL_Wheel/If v&gt;=10 km//h/LockDetect); threshold_10km_h_180 (brake_acc_nodiv/ABS_RL_Wheel/Threshold_10km//h); lockdetect_131 (brake_acc_nodiv/ABS_FR_Wheel/If v&gt;=10 km//h/LockDetect); threshold_10km_h_132 (brake_acc_nodiv/ABS_FR_Wheel/Threshold_10km//h); threshold_10km_h_194 (brake_acc_nodiv/ABS_FL_Wheel/Threshold_10km//h); lockdetect_193 (brake_acc_nodiv/ABS_FL_Wheel/If v&gt;=10 km//h/LockDetect); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name x ="5" y ="5">_20ms1_200</name>
<declaration >clock t;
int sn = 200;
double IAT = 0.0001;
double OFFSET = 0;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/20ms1 
  // Signal name: _20ms1_200_signal; 
 // Predecessors (0): successors begin (0): </declaration>
<location id ="id0" x ="93" y ="-17">
<name x ="110" y ="-25">Operate</name>
<label kind ="exponentialrate" x ="110" y ="0">1000</label>
</location>
<location id ="id1" x ="-144" y ="-17">
<name x ="-169" y ="-51">Start</name>
<label kind ="invariant" x ="-186" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id1" />
<transition >
<source ref ="id1" />
<target ref ="id0" />
<label kind ="guard" x ="-68" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-59" y ="-17">initialize(), blockRoutine()</label>
</transition>
<transition >
<source ref ="id0" />
<target ref ="id0" />
<label kind ="assignment" x ="93" y ="-93">blockRoutine()</label>
<nail x ="93" y ="-76" />
<nail x ="187" y ="-76" />
<nail x ="187" y ="51" />
<nail x ="93" y ="51" />
</transition>
</template>
<template >
<name >add_201</name>
<declaration >double ts = T_spd_est;
double IAT = 0.0001;
int sn = 201;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Veh_Speed_Estimator/Add 
  // Signal name: add_201_signal; 
 // Predecessors (4): to_int_135 (brake_acc_nodiv/HW_RREncoder/to_int); to_int_167 (brake_acc_nodiv/HW_RLEncoder/to_int); to_int_119 (brake_acc_nodiv/HW_FREncoder/to_int); to_int1_151 (brake_acc_nodiv/HW_FLEncoder/to_int1); successors begin (1): average_rpm_202 (brake_acc_nodiv/Veh_Speed_Estimator/average_rpm); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >average_rpm_202</name>
<declaration >double ts = T_spd_est;
double IAT = 0.0001;
int sn = 202;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Veh_Speed_Estimator/average_rpm 
  // Signal name: average_rpm_202_signal; 
 // Predecessors (1): add_201 (brake_acc_nodiv/Veh_Speed_Estimator/Add); successors begin (1): w__grad_s__203 (brake_acc_nodiv/Veh_Speed_Estimator/w (grad//s)); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >w__grad_s__203</name>
<declaration >double ts = T_spd_est;
double IAT = 0.0001;
int sn = 203;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Veh_Speed_Estimator/w (grad//s) 
  // Signal name: w__grad_s__203_signal; 
 // Predecessors (1): average_rpm_202 (brake_acc_nodiv/Veh_Speed_Estimator/average_rpm); successors begin (1): v__km_h__204 (brake_acc_nodiv/Veh_Speed_Estimator/v (km//h)); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<template >
<name >v__km_h__204</name>
<declaration >double ts = T_spd_est;
double IAT = 0.0001;
int sn = 204;
double OFFSET = 0;
clock t;

void blockRoutine(){}

void customInit(){}

void initialize(){
t = 0;
customInit();
}
// BlockId: brake_acc_nodiv/Veh_Speed_Estimator/v (km//h) 
  // Signal name: v__km_h__204_signal; 
 // Predecessors (1): w__grad_s__203 (brake_acc_nodiv/Veh_Speed_Estimator/w (grad//s)); successors begin (8): v__m_s__185 (brake_acc_nodiv/ABS_FL_Wheel/If v&gt;=10 km//h/v (m//s)); threshold_10km_h_194 (brake_acc_nodiv/ABS_FL_Wheel/Threshold_10km//h); v__m_s__123 (brake_acc_nodiv/ABS_FR_Wheel/If v&gt;=10 km//h/v (m//s)); threshold_10km_h_132 (brake_acc_nodiv/ABS_FR_Wheel/Threshold_10km//h); threshold_10km_h_148 (brake_acc_nodiv/ABS_RR_Wheel/Threshold_10km//h); v__m_s__139 (brake_acc_nodiv/ABS_RR_Wheel/If v&gt;=10 km//h/v (m//s)); threshold_10km_h_180 (brake_acc_nodiv/ABS_RL_Wheel/Threshold_10km//h); v__m_s__171 (brake_acc_nodiv/ABS_RL_Wheel/If v&gt;=10 km//h/v (m//s)); </declaration>
<location id ="id2" x ="102" y ="-17">
<name x ="119" y ="-25">Operate</name>
<label kind ="invariant" x ="119" y ="-42">t &lt;= ts</label>
</location>
<location id ="id3" x ="-85" y ="-17">
<name x ="-95" y ="-51">Offset</name>
<label kind ="invariant" x ="-153" y ="8">t &lt;= OFFSET</label>
</location>
<location id ="id4" x ="-238" y ="-17">
<name x ="-263" y ="-51">Start</name>
<label kind ="invariant" x ="-280" y ="8">gtime &lt;= sn*IAT</label>
</location>
<init ref ="id4" />
<transition >
<source ref ="id2" />
<target ref ="id2" />
<label kind ="guard" x ="119" y ="34">t &gt;= ts</label>
<label kind ="assignment" x ="102" y ="-93">blockRoutine(), t = 0</label>
<nail x ="102" y ="-76" />
<nail x ="196" y ="-76" />
<nail x ="196" y ="51" />
<nail x ="102" y ="51" />
</transition>
<transition >
<source ref ="id3" />
<target ref ="id2" />
<label kind ="guard" x ="-42" y ="-51">t &gt;= OFFSET</label>
<label kind ="assignment" x ="-17" y ="-8">blockRoutine(),
t = 0</label>
</transition>
<transition >
<source ref ="id4" />
<target ref ="id3" />
<label kind ="guard" x ="-221" y ="-51">gtime &gt;= sn*IAT</label>
<label kind ="assignment" x ="-195" y ="-17">initialize()</label>
</transition>
</template>
<system >
// Place template instantiations here.

// List one or more processes to be composed into a system.
system;
    pedal_map_13_instance = pedal_map_13(); 
to_int_14_instance = to_int_14(); 
_5ms_15_instance = _5ms_15(); 
half_16_instance = half_16(); 
negative_17_instance = negative_17(); 
rr_18_instance = rr_18(); 
add_19_instance = add_19(); 
sample_time_over_mass_20_instance = sample_time_over_mass_20(); 
sum_21_instance = sum_21(); 
unit_delay_22_instance = unit_delay_22(); 
saturation_23_instance = saturation_23(); 
w_radps_24_instance = w_radps_24(); 
saturation_25_instance = saturation_25(); 
whlradius_26_instance = whlradius_26(); 
v_wr_27_instance = v_wr_27(); 
times100_28_instance = times100_28(); 
abs_29_instance = abs_29(); 
max_v_wr_30_instance = max_v_wr_30(); 
_sfunction__32_instance = _sfunction__32(); 
divide_33_instance = divide_33(); 
switch_35_instance = switch_35(); 
switch1_36_instance = switch1_36(); 
friction_force_n_37_instance = friction_force_n_37(); 
sign_38_instance = sign_38(); 
product_39_instance = product_39(); 
radius_40_instance = radius_40(); 
subtract_41_instance = subtract_41(); 
ts_over_inertia_43_instance = ts_over_inertia_43(); 
sum_44_instance = sum_44(); 
w__rpm__45_instance = w__rpm__45(); 
negative3_46_instance = negative3_46(); 
fl_47_instance = fl_47(); 
w_radps_48_instance = w_radps_48(); 
saturation_49_instance = saturation_49(); 
whlradius_50_instance = whlradius_50(); 
v_wr_51_instance = v_wr_51(); 
times100_52_instance = times100_52(); 
abs_53_instance = abs_53(); 
max_v_wr_54_instance = max_v_wr_54(); 
_sfunction__56_instance = _sfunction__56(); 
divide_57_instance = divide_57(); 
switch_59_instance = switch_59(); 
switch1_60_instance = switch1_60(); 
friction_force_n_61_instance = friction_force_n_61(); 
sign_62_instance = sign_62(); 
product_63_instance = product_63(); 
radius_64_instance = radius_64(); 
subtract_65_instance = subtract_65(); 
ts_over_inertia_67_instance = ts_over_inertia_67(); 
sum_68_instance = sum_68(); 
w__rpm__69_instance = w__rpm__69(); 
negative2_70_instance = negative2_70(); 
fr_71_instance = fr_71(); 
w_radps_72_instance = w_radps_72(); 
saturation_73_instance = saturation_73(); 
whlradius_74_instance = whlradius_74(); 
v_wr_75_instance = v_wr_75(); 
times100_76_instance = times100_76(); 
abs_77_instance = abs_77(); 
max_v_wr_78_instance = max_v_wr_78(); 
_sfunction__80_instance = _sfunction__80(); 
divide_81_instance = divide_81(); 
switch_83_instance = switch_83(); 
switch1_84_instance = switch1_84(); 
friction_force_n_85_instance = friction_force_n_85(); 
sign_86_instance = sign_86(); 
product_87_instance = product_87(); 
radius_88_instance = radius_88(); 
subtract_89_instance = subtract_89(); 
ts_over_inertia_91_instance = ts_over_inertia_91(); 
sum_92_instance = sum_92(); 
w__rpm__93_instance = w__rpm__93(); 
negative1_94_instance = negative1_94(); 
rl_95_instance = rl_95(); 
w_radps_96_instance = w_radps_96(); 
saturation_97_instance = saturation_97(); 
whlradius_98_instance = whlradius_98(); 
v_wr_99_instance = v_wr_99(); 
times100_100_instance = times100_100(); 
abs_101_instance = abs_101(); 
max_v_wr_102_instance = max_v_wr_102(); 
_sfunction__104_instance = _sfunction__104(); 
divide_105_instance = divide_105(); 
switch_107_instance = switch_107(); 
switch1_108_instance = switch1_108(); 
friction_force_n_109_instance = friction_force_n_109(); 
sign_110_instance = sign_110(); 
product_111_instance = product_111(); 
radius_112_instance = radius_112(); 
subtract_113_instance = subtract_113(); 
ts_over_inertia_115_instance = ts_over_inertia_115(); 
sum_116_instance = sum_116(); 
w__rpm__117_instance = w__rpm__117(); 
v__km_h__118_instance = v__km_h__118(); 
to_int_119_instance = to_int_119(); 
_10ms_3_121_instance = _10ms_3_121(); 
whespd__m_s__122_instance = whespd__m_s__122(); 
v__m_s__123_instance = v__m_s__123(); 
subtract_124_instance = subtract_124(); 
positive_125_instance = positive_125(); 
times_10_126_instance = times_10_126(); 
slip_abs_on_times_10_127_instance = slip_abs_on_times_10_127(); 
lockdetect_131_instance = lockdetect_131(); 
threshold_10km_h_132_instance = threshold_10km_h_132(); 
to_int_135_instance = to_int_135(); 
_10ms_1_137_instance = _10ms_1_137(); 
whespd__m_s__138_instance = whespd__m_s__138(); 
v__m_s__139_instance = v__m_s__139(); 
subtract_140_instance = subtract_140(); 
positive_141_instance = positive_141(); 
times_10_142_instance = times_10_142(); 
slip_abs_on_times_10_143_instance = slip_abs_on_times_10_143(); 
lockdetect_147_instance = lockdetect_147(); 
threshold_10km_h_148_instance = threshold_10km_h_148(); 
to_int1_151_instance = to_int1_151(); 
pedal_map_161_instance = pedal_map_161(); 
round_to_int_163_instance = round_to_int_163(); 
_10ms_164_instance = _10ms_164(); 
gain1_165_instance = gain1_165(); 
to_int_167_instance = to_int_167(); 
_10ms_2_169_instance = _10ms_2_169(); 
whespd__m_s__170_instance = whespd__m_s__170(); 
v__m_s__171_instance = v__m_s__171(); 
subtract_172_instance = subtract_172(); 
positive_173_instance = positive_173(); 
times_10_174_instance = times_10_174(); 
slip_abs_on_times_10_175_instance = slip_abs_on_times_10_175(); 
lockdetect_179_instance = lockdetect_179(); 
threshold_10km_h_180_instance = threshold_10km_h_180(); 
_10ms_4_183_instance = _10ms_4_183(); 
whespd__m_s__184_instance = whespd__m_s__184(); 
v__m_s__185_instance = v__m_s__185(); 
subtract_186_instance = subtract_186(); 
positive_187_instance = positive_187(); 
times_10_188_instance = times_10_188(); 
slip_abs_on_times_10_189_instance = slip_abs_on_times_10_189(); 
lockdetect_193_instance = lockdetect_193(); 
threshold_10km_h_194_instance = threshold_10km_h_194(); 
_20ms_198_instance = _20ms_198(); 
distribution_199_instance = distribution_199(); 
_20ms1_200_instance = _20ms1_200(); 
add_201_instance = add_201(); 
average_rpm_202_instance = average_rpm_202(); 
w__grad_s__203_instance = w__grad_s__203(); 
v__km_h__204_instance = v__km_h__204(); 
</system>
<queries  />
</nta>
